# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
npx create-next-app vhd-analysis
cd vhd-analysis
npm create vite@latest vhd-analysis -- --template react
cd vhd-analysis
npm install
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
content: [
  "./index.html",
  "./src/**/*.{js,ts,jsx,tsx}",
],
@tailwind base;
@tailwind components;
@tailwind utilities;
npm install framer-motion
npx shadcn-ui@latest init
npx shadcn-ui@latest add card
import { Card, CardContent } from "@/components/ui/card";
import { motion } from "framer-motion";

export default function PortersFiveForces() {
  return (
    <div className="p-8 max-w-5xl mx-auto">
      <motion.h1
        className="text-3xl font-bold mb-6 text-center"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
      >
        Porter’s Five Forces Analysis – VietHealth Devices (VHD)
      </motion.h1>

      <div className="grid grid-cols-3 gap-6">
        {/* Competitive Rivalry */}
        <Card className="col-span-3 bg-red-50 border-red-300">
          <CardContent className="p-6">
            <h2 className="text-xl font-semibold text-red-700 mb-2 text-center">
              Competitive Rivalry: High
            </h2>
            <p>
              The Vietnamese medical device market faces intense rivalry,
              with ~90% of devices historically imported. Foreign entrants
              compete on quality, innovation, and cost. VHD must improve
              efficiency and product quality to stand out. AI-driven predictive
              maintenance and computer-vision QC offer cost and quality
              advantages.
            </p>
          </CardContent>
        </Card>

        {/* ... same pattern for Buyers, Suppliers, New Entrants, Substitutes */}
      </div>
    </div>
  );
}
import PortersFiveForces from "./components/PortersFiveForces";

function App() {
  return (
    <div>
      <PortersFiveForces />
    </div>
  );
}

export default App;
npm run dev
